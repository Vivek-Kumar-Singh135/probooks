{"version":3,"sources":["components/Header.js","BooksAPI.js","components/Book.js","components/Shelf.js","components/Shelves.js","components/TrackRecord.js","App.js","hooks/useQuery.js","index.js"],"names":["Header","react_default","a","createElement","className","api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","search","query","fetch","concat","method","Object","objectSpread","Content-Type","body","JSON","stringify","then","res","json","data","books","Book","_ref","book","changeBookShelf","style","width","height","backgroundImage","imageLinks","thumbnail","defaultValue","shelf","onChange","e","target","value","disabled","title","publisher","Shelf","updateBookShelf","map","b","key","id","components_Book","Shelves","Reading","filter","Like","Dislike","components_Shelf","TrackRecord","list","bookRecord","BooksApp","_useState","useState","_useState2","slicedToArray","setBooks","_useState3","Map","_useState4","mapOfIdToBooks","setMapOfIdToBooks","_useState5","_useState6","setQuery","_useQuery","searchBooks","setSearchBooks","_useDebounce","useDebounce","useEffect","isActive","BooksAPI","error","useQuery","_useQuery2","_useState7","_useState8","mergedBooks","setMergedBooks","_useState9","_useState10","setBookRecord","console","log","createMapOfBooks","combined","has","get","set","whereTo","trackBooks","toConsumableArray","updatedBooks","push","react_router_dom","react_router","path","to","type","placeholder","length","components_Header","components_Shelves","TrackRecord_TrackRecord","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.0c6576f5.chunk.js","sourcesContent":["import React from 'react';\n\n\nconst Header = () => {\n\n    return (\n        <div className=\"list-books-title\">\n            <h1>proBook</h1>\n        </div>\n    )\n}\n\nexport default Header;","\nconst api = \"https://reactnd-books-api.udacity.com\"\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => {\n      console.log(res)\n      return res.json()})\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => data.books)\n","import React from 'react';\n\nconst Book = ({ book, changeBookShelf }) => {\n\n    return (\n        <div className=\"book\">\n            <div className=\"book-top\">\n                <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: `url(${book.imageLinks.thumbnail})` }}></div>\n                <div className=\"book-shelf-changer\">\n                    <select defaultValue={book.shelf ? book.shelf : \"none\"} onChange={(e) => changeBookShelf(book, e.target.value)}>\n                        <option value=\"move\" disabled>Move to...</option>\n                        <option value=\"currentlyReading\">Reading</option>\n                        <option value=\"wantToRead\">Like</option>\n                        <option value=\"read\">Dislike</option>\n                        <option value=\"none\">Delete</option>\n                    </select>\n                </div>\n            </div>\n            <div className=\"book-title\">{book.title}</div>\n            <div className=\"book-authors\">{book.publisher}</div>\n        </div>\n    )\n\n}\n\nexport default Book;","import React from 'react';\nimport Book from './Book';\n\n\nconst Shelf = ({ books, title, updateBookShelf }) => {\n\n    return (\n        <div className=\"bookshelf\">\n            <h2 className=\"bookshelf-title\">{title}</h2>\n            <div className=\"bookshelf-books\">\n                <ol className=\"books-grid\">\n                    {books.map(b => (\n                        <li key={b.id}>\n                            <Book book={b} changeBookShelf={updateBookShelf}/>\n                        </li>\n                    ))}\n\n                </ol>\n            </div>\n        </div>\n    )\n}\n\nexport default Shelf;","import React from 'react';\nimport Shelf from './Shelf';\n\n\nconst Shelves = ({books, updateBookShelf}) => {\n\n    const Reading = books.filter((book) => book.shelf === \"currentlyReading\");\n    const Like = books.filter((book) => book.shelf === \"wantToRead\");\n    const Dislike = books.filter((book) => book.shelf === \"read\");\n\n    return (\n        <div>\n            <Shelf title=\"Reading\" books={Reading} updateBookShelf={updateBookShelf}/>\n            <Shelf title=\"Like\" books={Like} updateBookShelf={updateBookShelf}/>\n            <Shelf title=\"Dislike\" books={Dislike} updateBookShelf={updateBookShelf}/>\n        </div>\n    )\n\n}\n\nexport default Shelves;","import React from \"react\";\r\n\r\nconst TrackRecord = ({bookRecord}) => {\r\n    const list = bookRecord\r\n    return(\r\n        <div className=\"book-record-container\">\r\n        <div className=\"book-record\">\r\n            <div>Books Read : {list[0]}</div>\r\n            <div>Books Liked : {list[1]}</div> \r\n            <div>Books Disliked : {list[2]}</div> \r\n            <div>Books Deleted : {list[3]}</div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {TrackRecord}","import React, { useState, useEffect } from 'react'\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom'\nimport Header from './components/Header'\nimport * as BooksAPI from './BooksAPI'\nimport './App.css'\nimport Shelves from './components/Shelves'\nimport Book from './components/Book'\nimport { TrackRecord } from './components/TrackRecord'\nimport { useDebounce } from 'use-debounce';\n\nimport useQuery from './hooks/useQuery'\n\nconst BooksApp = () => {\n\n  const [books, setBooks] = useState([])\n  const [mapOfIdToBooks, setMapOfIdToBooks] = useState(new Map());\n\n  const [query, setQuery] = useState(\"\");\n  const [searchBooks, setSearchBooks] = useQuery(query);\n  const [mergedBooks, setMergedBooks] = useState([]);\n\n  const [bookRecord, setBookRecord] = useState([2,2,3,0]);\n\n\n  useEffect(() => {\n\n    BooksAPI.getAll()\n      .then(data => {\n        setBooks(data)\n        setMapOfIdToBooks(createMapOfBooks(data))\n      }\n      );\n  }, [])\n\n\n  useEffect(() => {\n\n    const combined = searchBooks.map(book => {\n      if (mapOfIdToBooks.has(book.id)) {\n        return mapOfIdToBooks.get(book.id);\n      } else {\n        return book;\n      }\n    })\n    setMergedBooks(combined);\n  }, [searchBooks])\n\n\n  const createMapOfBooks = (books) => {\n    const map = new Map();\n    books.map(book => map.set(book.id, book));\n    return map;\n  }\n\n  const updateBookShelf = (book, whereTo) => {\n    let trackBooks = [...bookRecord]\n    if(whereTo === 'none') trackBooks[3] = trackBooks[3] + 1\n    else if(whereTo === 'currentlyReading') trackBooks[0] = trackBooks[0] + 1\n    else if(whereTo === 'wantToRead') trackBooks[1] = trackBooks[1] + 1\n    else if(whereTo === 'read') trackBooks[2] = trackBooks[2] + 1\n    setBookRecord(trackBooks);\n    const updatedBooks = books.map(b => {\n      if (b.id === book.id) {\n        book.shelf = whereTo;\n        return book;\n      }\n      return b;\n    })\n    if (!mapOfIdToBooks.has(book.id)) {\n      book.shelf = whereTo;\n      updatedBooks.push(book)\n    }\n    setBooks(updatedBooks);\n    BooksAPI.update(book, whereTo);\n  }\n\n  return (\n    <div className=\"app\">\n      <Router>\n\n        <Switch>\n\n          {/* SEARCH */}\n          <Route path=\"/search\">\n            <div className=\"search-books\">\n              <div className=\"search-books-bar\">\n                <Link to=\"/\">\n                  <button className=\"close-search\">Close</button>\n                </Link>\n                <div className=\"search-books-input-wrapper\">\n                  <input type=\"text\" placeholder=\"Search by title or author\" value={query} onChange={(e) => setQuery(e.target.value)} />\n                </div>\n              </div>\n              <div className=\"search-books-results\">\n                <h2>{searchBooks.length} books found</h2>\n                <ol className=\"books-grid\">\n                  {mergedBooks.map(b => (\n                    <li key={b.id}>\n                      <Book book={b} changeBookShelf={updateBookShelf} />\n                    </li>\n                  ))}\n                </ol>\n              </div>\n            </div>\n          </Route>\n\n          {/* MAIN PAGE */}\n          <Route path=\"/\">\n            <div className=\"list-books\">\n            {console.log(\"SEARCH\", searchBooks)}\n              <Header />\n              <div className=\"list-books-content\">\n                <Shelves books={books} updateBookShelf={updateBookShelf} />\n                <TrackRecord bookRecord={bookRecord}/>\n              </div>\n              <div className=\"open-search\">\n                <Link to=\"/search\">\n                  <button>Add a book</button>\n                </Link>\n              </div>\n              <div>\n                \n              </div>\n            </div>\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  )\n\n}\n\nexport default BooksApp","import React, { useState, useEffect } from 'react'\nimport * as BooksAPI from '..//BooksAPI'\n\nimport { useDebounce } from 'use-debounce';\n\n\nexport default function useQuery(query) {\n\n    const [searchBooks, setSearchBooks] = useState([]);\n    const [value] = useDebounce(query, 500);\n\n    useEffect(() => {\n\n        let isActive = true;\n        if (value) {\n            BooksAPI.search(value).then(data => {\n                if (data.error) {\n                    setSearchBooks([])\n                } else {\n                    if (isActive) {\n                        setSearchBooks(data);\n                    }\n                }\n            })\n        }\n\n        return () => {\n            isActive = false;\n            setSearchBooks([])\n        }\n\n    }, [value])\n\n\n    return [searchBooks, setSearchBooks];\n\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render( < App / > , document.getElementById('root'))"],"sourceRoot":""}